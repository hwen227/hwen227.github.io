<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>比特币学习笔记(二)：比特币的特别之处</title>
      <link href="/home/2024/10/16/%E6%AF%94%E7%89%B9%E5%B8%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%E6%AF%94%E7%89%B9%E5%B8%81%E7%9A%84%E7%89%B9%E5%88%AB%E4%B9%8B%E5%A4%84/"/>
      <url>/home/2024/10/16/%E6%AF%94%E7%89%B9%E5%B8%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%E6%AF%94%E7%89%B9%E5%B8%81%E7%9A%84%E7%89%B9%E5%88%AB%E4%B9%8B%E5%A4%84/</url>
      
        <content type="html"><![CDATA[<p>在了解了比特币的历史后，相信会产生许多疑问，相比于政府发行的法币，比特币到底有什么特别之处？他的价值从何而来？加密货币与我们银行卡里显示的金额到底有什么区别？</p><span id="more"></span><h2 id="纸币的诞生"><a href="#纸币的诞生" class="headerlink" title="纸币的诞生"></a>纸币的诞生</h2><p>要解决以上问题，我们先来简单了解纸币的历史，在人类早期的金融体系中，黄金白银之类的贵金属作为“一般等价物”，用作商品交换的中介，也就是货币，但金属货币沉重不好携带，流动性也不强，交易大量增加也会导致金属货币短缺。</p><p>假如这个时候，一个人站了出来，给大家发放纸条并承诺，拿到纸条的人可以凭纸条到我这领取1块金币。他是一名当地非常有名望的富商，并且大家都认可他是一个非常有信用的人，不会违背承诺，且发行的每张纸条上的签名是独一无二的，无法伪造的。</p><p>这时候，人们就可以用这个人发放的纸条进行交易，换句话说，纸条变成货币一样在流通。如果将发行纸条的主体替换成一个银行，银行可以凭借它丰富的黄金储蓄发放更多的“纸条”，这些”纸条“们就具有了我们现在使用的纸币的一些功能。</p><p>在现代社会，一个国家的货币都是由政府和中央银行控制的，但在货币体系产生的初期，货币形式是由多个具有公信力的机构或个体（例如私人银行、商人发）发行的代币。在这个阶段，货币供应是分散的，这意味着市场上可能存在多种不同的代币或货币，它们各自代表不同的价值、背书和承诺。人们持有一种纸币，代表信任发行货币的机构有足够的黄金储备，可以兑换他们手中的纸币，一旦某家机构信用破产，它发行的货币也就失去了价值。</p><p>随着时间推移，政府意识到了这种允许其他机构自行发行货币的做法会导致市场混乱和不稳定，因此逐步垄断了货币发行权，这么做的目的是集中控制货币供应，使货币系统更加稳定，同时政府也可以通过中央银行控制市场上的货币流通量来调节经济。这时候的纸币又称为法币。</p><p>在今天，货币的价值已经不再于黄金或是其他贵金属挂钩，而是变成了 “信用货币”其价值是基于政府的信用和经济实力，而不是与一个国家实际黄金储备。</p><h2 id="法币的电子形态：银行存款"><a href="#法币的电子形态：银行存款" class="headerlink" title="法币的电子形态：银行存款"></a>法币的电子形态：银行存款</h2><p>随着计算机技术的发展，银行系统经过几十年的发展，已经用计算机系统完全代替了人工记账，纸币也实现了电子化。现在，我们可以自由地使用网银、支付宝这样的工具实现随时随地转账付款，就得益于纸币的电子化和网络化。</p><p>银行存款本质上是用户的资产，对应着银行的负债。银行记录用户在银行的资产余额，因此，用户A通过银行把100元转账给用户B的时候，用户A的资产减少100元，相应的，用户B的资产增加100元，银行对用户A和用户B的总负债不变。换句话说，存款相当于用户的“提款期权”。</p><p>电子化的货币在流通上非常方便，但这样的交易永远绕不开一个中央信任机构，并且用户必须信任银行这个金融中介不会篡改余额。而当使用现金进行交易时，交易就不需要通过银行，银行和用户之间也不存在资产和负债关系。</p><p>电子化的货币本质上仍然是法币，它仍然是由央行发行，只是以计算机技术把货币以实体纸币形式的流通变成了银行计算机系统的存款，由银行等机构维护账本，依靠内部系统的安全性。</p><h2 id="比特币的特别之处1：分布式的信任系统"><a href="#比特币的特别之处1：分布式的信任系统" class="headerlink" title="比特币的特别之处1：分布式的信任系统"></a>比特币的特别之处1：分布式的信任系统</h2><p>从上文对纸币的介绍中我们可以看出，发行货币的两个必要条件：</p><ol><li>一个具有强大公信力的签发机构</li><li>无法伪造的签名</li></ol><p>纸币本身没有任何内在价值，只是花哨的纸片，它们的发行和流通依赖于公众对发行者的信任，必须依赖于依赖于中心化的、公信力强的机构，如<strong>银行</strong>或<strong>政府</strong>。货币体系的信任基础就是这些中心化的机构提供的。</p><p>有没有一种办法，可以在没有一个强大中心机构的情况下建立货币的信任基础？</p><p>比特币是这样一个不需要类似银行的中央机构，通过全球P2P网络进行发行和流通的电子货币系统。并且，它具有更高的透明度，不用担心银行的坏账或金融机构的突然倒闭。它是怎么做到的？</p><p>我们想象下面这样的情况：小李向你借100块钱，你要如何证明小李欠了你100块？</p><ul><li>方法一：让小李写份欠条，但小李可以之后声明这份欠条是伪造的</li><li>方法二：找一个德高望重的见证人，这个见证人在本地非常有名望且绝对不会说谎，大家都会相信他说的话。但，如果你生活的地区不存在这样的人怎么办？或者这个人的公信力被破坏了，例如他开始撒谎或是因为其他丑闻失去了信誉，那我们这笔借款的真实性也很难得到保障。</li><li>方法三：找20个村民一起做见证，每个人都在自己的小本子上写下，”小李欠100块钱“。如果小李想要赖掉这笔钱，他需要做20个人的思想工作，这会付出大量成本，远超于他借的100块。</li></ul><p>在方法二中，德高望重的见证人就像现实中的银行或政府。如果在一次的交易中，有任何争议，银行是最终的仲裁者。所有人都信任银行或中央机构的权威和公信力，因此也信任他们记录的账本。<br>但一旦银行的公信力受损（例如面临破产和倒闭时），人们的信任就会崩塌，这也是中心化系统的弱点之一：依赖单一的权威。</p><p>方法三中找多个村民做见证的方法，是区块链提供的去中心化的信任系统方案。这20个村民，就像是区块链中的分布式节点。在现实中，比特币节点的数量远远大于20个，仅仅是全节点的数量就在12,000 到 15,000之间，这些节点分布在全球各地，每个节点都可以对交易进行验证和记录。这个分布式系统的优点在于：</p><ul><li>每个节点都有一份账本的副本，记录着相同的交易信息，并且是公开的、透明的、可验证的</li><li>系统不依赖于一个单一的中心机构，即使某些节点失效或恶意篡改，系统也可以正常运行。</li><li>交易不可篡改，要改变每个节点记录的内容是相当困难的一件事。</li></ul><h2 id="比特币的特别之初2：固定的发行量"><a href="#比特币的特别之初2：固定的发行量" class="headerlink" title="比特币的特别之初2：固定的发行量"></a>比特币的特别之初2：固定的发行量</h2><p>比特币的另一项特别之处是，比特币的发行是固定的。它的总量在设计之初就被限制在了2100万枚，唯一的发行方式是挖矿，通过奖励的方式发放给创造了新区块的矿工。一切都是通过固定的算法进行发放，没有任何个人或组织可以随意增发。</p><p>比特币开增加了奖励衰减的机制，规定每21w个区块后，获得的比特币将会衰减一半。一开始创造一个区块可以获得50BTC，随后是25BTC，目前（2024.08.14）处于每创造一个区块可获得3.125个BTC的阶段。时间越往后，挖矿算力的竞争就越大，但同时比特币也变得越来越值钱。</p><blockquote><p>Block Reward 机制<br>比特币的Block Reward最初是50 BTC，每挖出210,000个区块后，奖励会减半。因此，奖励的序列为：</p><ul><li>第一个210,000个区块：每个区块奖励50 BTC</li><li>第二个210,000个区块：每个区块奖励25 BTC</li><li>第三个210,000个区块：每个区块奖励12.5 BTC</li><li>依此类推</li></ul></blockquote><p>这种不断奖励减半衰减的机制是对黄金等自然资源开采的一种模拟，确保了比特币的稀缺性，使得比特币具备了抗通胀和价值存储的潜力。随着时间推移，新增比特币的速度减缓，最终比特币将变得越来越稀缺，这也与黄金的稀缺性相似。</p><p>这种设计意在避免传统货币体系中，由于政策失误导致的通货膨胀问题。传统货币供应由政府调节，如果政策制定不当，比如过度增发货币，会导致严重的通货膨胀。历史上委内瑞拉和津巴布韦是关于通货膨胀最著名的例子，由于政府滥发货币导致了货币严重贬值，居民手中的钱几乎变得一文不值。</p><h1 id="比特币与传统货币的对比"><a href="#比特币与传统货币的对比" class="headerlink" title="比特币与传统货币的对比"></a>比特币与传统货币的对比</h1><p>比特币作为一个具有开创性意义的货币系统，它的优势在于</p><ul><li><strong>公开透明</strong>：每笔比特币交易都记录在<strong>区块链</strong>上，任何人都可以查看所有的交易记录。</li><li><strong>不可篡改</strong>：一旦交易被添加到区块链，就无法被更改或删除</li><li><strong>去中心化</strong>：比特币不依赖于任何单一结构，使用奖励机制鼓励分布在全球的节点自发地进行维护。</li><li><strong>抗通货膨胀</strong>：比特币从技术限制了无节制增发的出现，使其具有一定的抗通胀能力</li><li><strong>跨境交易便利</strong>：比特币的去中心化特性使得跨境交易不再依赖传统银行系统的限制。没有外汇管制，也无需等待银行处理国际汇款，<strong>交易速度快</strong>且成本相对较低</li></ul><p>作为一个新生的系统，虽然得到了部分人的认可，但它的未来仍然是不确定的。相比于传统货币，他的缺点也很明显：</p><ul><li><strong>高成本、低效率</strong>：中心化的系统在效率和成本方面远远大于中心化系统，比特币的机制需要消耗大量的计算资源，处理交易的速度较慢。与传统银行系统每秒处理上千笔交易相比，比特币每秒只能处理少量交易，这极大限制了其在高频支付场景中的应用。<ul><li>当然，区块链技术也在更新迭代，一些新的共识机制和扩展技术（如PoS和闪电网络）可能会在未来进一步提高效率和降低成本<br></li></ul></li><li><strong>价格波动性大</strong>：比特币的价格极易受到市场情绪、政策变化、技术发展等因素的影响，短期内波动剧烈。因此，比特币在短期内很难像黄金等传统资产一样作为稳定的<strong>价值存储工具</strong>。<br></li><li><strong>接受度低</strong>：无法像法币一样广泛流通，未来极不确定，取决于技术的进步和监管政策的变化</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>比特币是第一个去中心化的数字货币，它最明显的特点是没有一个中心化的机构，而是由分布在全球各地的众多节点共同维护。这使得他有绝对的透明性、防篡改性以及抗通货膨胀性。比特币的出现，通过区块链技术提供了一个去中心化的金融模式。作为新生的事物，他存在许多问题，例如技术的高成本、价格波动剧烈，加密货币的未来可能需要在去中心化和必要的监管之间找到平衡。比特币的，无疑为金融体系打开了一扇全新的大门，比特币背后的区块链技术，也让我们看到了互联网未来的一种可能。</p>]]></content>
      
      
      <categories>
          
          <category> 比特币学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Butterfly主题对博客进行美化</title>
      <link href="/home/2024/08/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Butterfly%E7%BE%8E%E5%8C%96/"/>
      <url>/home/2024/08/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Butterfly%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>Hexo支持各类主题，在这之中<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a>的主题设计一眼吸引到了我，我好爱他弧形边框的卡片式的UI设计，功能丰富的同时还保持了美观和整洁，更棒的是它还支持中文！Whats more，他的中文文档也好详细！下面跟着我一步步来使用Butterfly主题吧。</p><h4 id="Step1-安装Butterfly主题"><a href="#Step1-安装Butterfly主题" class="headerlink" title="Step1 安装Butterfly主题"></a>Step1 安装Butterfly主题</h4><p>在你的Hexo根目录中，从Github上clone Butterfly主题到themes文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>或者网络不好的朋友可以使用Gitee</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h4 id="Step2-应用主题"><a href="#Step2-应用主题" class="headerlink" title="Step2 应用主题"></a>Step2 应用主题</h4><p>打开 Hexo 项目的 <code>_config.yml</code> 文件，拉到最后找到 <code>theme</code> ，他的默认设置是<code>landscape</code>,我们将它更改为 <code>butterfly</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>下载 pug 以及 stylus 的渲染器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>以下是来自官方文档的建议：</p><blockquote><p>为了减少升级带来的不便，我们可以把主题文件夹中的  <code>_config.yml</code> 复制到 Hexo 根目录里（注意是theme&#x2F;butterfly下的cofig主题配置文件，不是站点配置文件），同时重新命名为<code>_config.butterfly.yml</code>。以后也只需要在 <code>_config.butterfly.yml</code>进行配置。Hexo会自动合并这两个yaml文件里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高</p></blockquote><h4 id="Step3-修改配置文件"><a href="#Step3-修改配置文件" class="headerlink" title="Step3 修改配置文件"></a>Step3 修改配置文件</h4><p>首先我们先将站点配置文件 <code>_config.yml</code>中将默认语言更改为简体中文</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Site</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure><p>默认语言是en，butterfly还支持zh-CN、zh-TW(繁体)。这里你同样可以修改网站的各种资料，例如标题、描述、作者信息等。</p><p>再打开主题配置文件<code>_config.butterfly.yml</code>，修改主菜单和目录。<br>通过删除井号键的注释，我们可以在展示我们需要的菜单。<br><code>/xxx/</code>表示路径，<code>||</code>后是图标图标名</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">   <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">   <span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">   <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">   <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">   <span class="string">List||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">     <span class="attr">Music:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">     <span class="attr">Movie:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br></pre></td></tr></table></figure><p>如果你需要修改菜单中的文字，可以直接在这里改成中文。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">文章总览:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">文章分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br></pre></td></tr></table></figure><h4 id="Step4-新建标签页和目录页"><a href="#Step4-新建标签页和目录页" class="headerlink" title="Step4 新建标签页和目录页"></a>Step4 新建标签页和目录页</h4><p>前往你的Hexo博客根目录，打开cmd命令窗口执行<code>hexo new page tags</code>, 这时候你的博客根目录&#x2F;source中就会生成一个含有<code>index.md</code>文件的<code>tags</code>文件夹，打开index文件，添加<code>type</code>参数，你也可以对其他参数进行修改</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的文章Tags</span><br><span class="line">date: 2024-08-10 23:45:03</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">orderby: name</span><br><span class="line"><span class="section">order: 1</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>释义</th></tr></thead><tbody><tr><td>type</td><td>页面类型，必须为 tags</td></tr><tr><td>orderby</td><td>排序方式 ：random&#x2F;name&#x2F;length</td></tr><tr><td>order</td><td>排序次序： 1, asc 升序; -1, desc 降序</td></tr></tbody></table><p>目录页的操作与标签页是一样的，只需眼在创建时和修改tags时改成categories即可</p><h4 id="Step-5-生成和启动hexo"><a href="#Step-5-生成和启动hexo" class="headerlink" title="Step 5 生成和启动hexo"></a>Step 5 生成和启动hexo</h4><p>现在是检验我们博客成果的时候了，hexo！启动！输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../../  <span class="comment"># 记得返回到项目根目录</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>用你的浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>  ，查看博客是否正确应用了butterfly主题</p><p>完美！我喜欢这个界面 （这里我已经把三篇文章复制到了source&#x2F;_post文件中）<br>![[截图_20240812131329.png]]</p><h3 id="对主题的个性化修改"><a href="#对主题的个性化修改" class="headerlink" title="对主题的个性化修改"></a>对主题的个性化修改</h3><p>接下来我要对他做一些个性化的修改</p><ol><li><strong>修改代码设置</strong><ol><li>修改代码主题** 在<code>_config.butterfly.yml</code>找到<code>highlight_theme</code>属性。把他修改成我喜欢的darker样式，毕竟黑色更酷一点。</li><li><strong>启用代码复制功能</strong> 找到<code>highlight_copy</code>属性，将它改成true</li></ol></li><li><strong>增加社交图标</strong> 书写格式为图标名 &#x3D;&#x3D;图标名：url || 描述性文字 || color&#x3D;&#x3D;<ol><li>在<a href="https://fontawesome.com/icons?from=io">font-awesome v6</a>中找到你的心仪图标</li><li>找到social属性，按格式填入自己的社交媒体账号</li></ol></li><li><strong>设置顶部图片</strong> 在source文件夹内新建一个images文件夹，放入你需要的图片。然后根据以下的参数描述填入你的图片</li></ol><table><thead><tr><th>参数</th><th>注解</th></tr></thead><tbody><tr><td>index_img</td><td>主页的 top_img</td></tr><tr><td>default_top_img</td><td>默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td>归档页面的 top_img</td></tr><tr><td>tag_img</td><td>tag 子页面的默认 top_img</td></tr><tr><td>tag_per_img</td><td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子页面的默认 top_img</td></tr><tr><td>category_per_img</td><td>category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><p>这里我修改了<code>default_top_img</code>: </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_top_img:</span> <span class="string">/images/wallhaven.png</span></span><br></pre></td></tr></table></figure><ol start="5"><li><strong>设置头像</strong> 找到参数avatar 放入自己的头像即可<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/images/profile.jpg</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="其他的一些小技巧"><a href="#其他的一些小技巧" class="headerlink" title="其他的一些小技巧"></a>其他的一些小技巧</h3><ol><li><strong>文章置顶</strong> 你可以直接在文章的front-matter区域里添加<code>sticky</code>属性来把这篇文章置顶。数值越大，置顶的优先级越大。</li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li>Butterfly的官方文档 <a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></li><li>一位大佬的博客 <a href="https://fe32.top/">https://fe32.top/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi!欢迎来到我的博客！</title>
      <link href="/home/2024/08/11/Intro/"/>
      <url>/home/2024/08/11/Intro/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>这是我的猫猫和狗狗</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>手把手教你从0开始用Github Pages框架搭建个人博客</title>
      <link href="/home/2024/08/10/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E7%94%A8Github%20Pages%E5%8D%9A%E5%AE%A2/"/>
      <url>/home/2024/08/10/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E7%94%A8Github%20Pages%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h3><p>嘿！非常高兴你能点进去这篇文章，以下内容记录了我搭建这个博客的全过程。<br>I hope this comes in handy for you！</p><span id="more"></span><h4 id="Step1-注册Github账号，搭建仓库"><a href="#Step1-注册Github账号，搭建仓库" class="headerlink" title="Step1.注册Github账号，搭建仓库"></a>Step1.注册Github账号，搭建仓库</h4><ol><li>注册账号后点击页面右上角的 “+” 按钮，选择 “New repository”</li><li>在新仓库名称中输入 &lt;github-username&gt;.github.io*，其中&lt;github-username&gt;一定要与你自己的Github用户名一致，这样Github才会自动将其作为你的个人主页。</li><li>选择仓库类型为Public，点击”Create repository”</li><li>这样完成后的git地址将会是 <a href="https://github.com/your-username/your-username.github.io.git">https://github.com/your-username/your-username.github.io.git</a></li><li>（隐藏步骤）hey如果你搞错了仓库名可以在setting中下拉到Danger Zone找到Delete this repository ; )</li></ol><h4 id="Step2-安装Node-js-和Git"><a href="#Step2-安装Node-js-和Git" class="headerlink" title="Step2. 安装Node.js 和Git"></a>Step2. 安装Node.js 和Git</h4><ol><li>我们要使用Hexo框架搭建博客，由于Hexo是基于Node.js的，所以要先到<a href="https://nodejs.org/en%E5%AE%89%E8%A3%85LST%E7%89%88%E6%9C%AC%E7%9A%84Node.js">https://nodejs.org/en安装LST版本的Node.js</a></li><li>到<a href="https://git-scm.com/%E5%AE%89%E8%A3%85%E6%9C%80%E7%A8%B3%E5%AE%9A%E7%89%88%E6%9C%AC%E7%9A%84git">https://git-scm.com/安装最稳定版本的git</a></li><li>检查是否安装成功，其中npm是node.js的包管理器。输入以下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>如果都返回了版本号，说明安装成功</li></ol><h4 id="Step3-安装Hexo"><a href="#Step3-安装Hexo" class="headerlink" title="Step3.安装Hexo"></a>Step3.安装Hexo</h4><ol><li>打开命令行终端（Windows用户按 Win+R,输入cmd后回车）</li><li>新建一个文件夹用于放置你的blog内容，并导航到该文件夹<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> myblog</span><br><span class="line"><span class="built_in">cd</span> myblog </span><br></pre></td></tr></table></figure></li><li>安装Hexo CLI<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><ul><li>这里你可能会遇到进度条卡在下载处，可以选择更换成国内的镜像源，更换完后查看是否配置成功后再次尝试安装Hexo<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry = https://registry.npmmirror.com</span><br><span class="line">npm config get registry</span><br></pre></td></tr></table></figure></li></ul></li><li>成功安装后，初始化Hexo博客到blog文件夹<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ol><h4 id="Step4-配置Hexo"><a href="#Step4-配置Hexo" class="headerlink" title="Step4. 配置Hexo"></a>Step4. 配置Hexo</h4><ol><li>在blog &#x2F; _config.yml文件中，可以设置博客的名称和作者等信息，这里我们只修改部署的信息,找到deploy部分。将以下信息填入文件中。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line"><span class="built_in">type</span>: git </span><br><span class="line">repo: https://github.com/&lt;github-username&gt;/&lt;github-username&gt;.github.io.git</span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure></li></ol><h4 id="Step5-创建第一篇文章并预览博客"><a href="#Step5-创建第一篇文章并预览博客" class="headerlink" title="Step5.创建第一篇文章并预览博客"></a>Step5.创建第一篇文章并预览博客</h4><ol><li><p>可以使用命令行新建一篇博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My First Post&quot;</span></span><br></pre></td></tr></table></figure><p>新建的文章Markdown格式，会被放入 hexo &#x2F; source &#x2F;  _posts&#x2F; 目录下。你也可以复制自己的Markdown格式的笔记到这个文件夹。</p></li><li><p>执行以下命令来在本地预览博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>随后在浏览器中访问 “<a href="http://localhost:4000/">http://localhost:4000</a>“ 就能看到你的博客啦。这个命令会经常被使用，以后你对博客进行更新调整的时候都需要先在本地进行预览。</p></li></ol><h4 id="Step6-将博客部署到Github-Pages"><a href="#Step6-将博客部署到Github-Pages" class="headerlink" title="Step6. 将博客部署到Github Pages"></a>Step6. 将博客部署到Github Pages</h4><ol><li>如果对你的博客表示满意，可以将他部署到Github上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>随后在浏览器中访问https:&#x2F;&#x2F;&lt;github-username&gt;.github.io<br>Boom! 你的个人博客就这样水灵灵地出现了。</li></ol><p>以上我们完成了最基础的博客部署。Hexo中支持多种主题和插件，可以根据需要安装不同的主题来更改博客的外观。你也可以通过查看Hexo文档进行自定义配置。</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ol><li>2024年，如何使用 github pages + Hexo + Next 搭建个人博客 <a href="https://mini-pi.github.io/2024/02/28/how-to-make-blog-wedsite/#more">https://mini-pi.github.io/2024/02/28/how-to-make-blog-wedsite/#more</a></li><li>运行npm install卡住不动的几种解决方案 <a href="https://blog.csdn.net/shi450561200/article/details/134354871">https://blog.csdn.net/shi450561200/article/details/134354871</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>比特币学习笔记(一)：比特币发展简史</title>
      <link href="/home/2024/08/10/%E6%AF%94%E7%89%B9%E5%B8%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%E6%AF%94%E7%89%B9%E5%B8%81%E7%AE%80%E5%8F%B2/"/>
      <url>/home/2024/08/10/%E6%AF%94%E7%89%B9%E5%B8%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%E6%AF%94%E7%89%B9%E5%B8%81%E7%AE%80%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p>比特币是什么？在学生时代的我眼里它是一件神秘的金融产品，它的身边围绕着太多一夜暴富的传说，绚烂又纸醉金迷。上大学后，我有了更多的生活费，我发现它更是一款回报率很高的理财产品，让我的闲置的小小零花钱，在几年后翻了倍。直到最近，我对Web3领域产生兴趣后，才正式地学习比特币这个点对点电子货币系统的相关知识，现在的我的认为，它是一项极其成功的社会实验，蕴含着了互联网未来的巨大潜能。下面请允许我展现这几个月所学，用一系列文章来介绍这个电子货币的起源与本质，揭开它神秘的面纱。</p><span id="more"></span><h1 id="比特币的发展简史"><a href="#比特币的发展简史" class="headerlink" title="比特币的发展简史"></a>比特币的发展简史</h1><p>2008年9月，以雷曼兄弟的倒闭为开端，金融危机在美国爆发并向全世界蔓延。</p><p>为了应对危机，美国政府展开了前所没有的大规模紧急救助，动用了数量惊人的公共资金去购买银行的不良资产，救助房利美以及房贷美（Fannie Mae 和 Freddie Mac）等大型金融机构，以避免金融系统全面崩溃。同时美联储采取量化宽松政策大量放水，试图通过超发货币刺激美国经济。</p><p>美国的危机只是倒下的第一张骨牌，金融海啸愈演愈烈，不仅仅是美国本土，席卷全世界。各个国家手上的美元大幅贬值，引起诸如汇率波动加剧、资产跑米破碎、股市踩踏式崩盘等一系列蝴蝶效应。</p><p>这次的危机让传统金融体系暴露出许多问题，说明了中心化机构的失败会对整个金融体系造成的严重影响；同时，金融衍生品的透明度不足，这些不透明的交易使得市场难以及时识别和应对风险，金融机构可能因为相信自己“大而不能倒”，而进行过度冒险的行为，并期待政府在危机时出手相救。</p><p>同年的10月31日，中本聪发布了比特币的白皮书《比特币：一种点对点的电子现金系统》，提出了一种无需依赖第三方机构、通过点对点网络来实现的货币体系。</p><p><img src="/home/2024/08/10/%E6%AF%94%E7%89%B9%E5%B8%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%E6%AF%94%E7%89%B9%E5%B8%81%E7%AE%80%E5%8F%B2/01.png" alt="中本聪在邮件组发送的比特币白皮书"></p><p>2009年1月3日，中本聪使用私人电脑挖出了比特币的第一个区块——创世区块（Genesis Block）。在创世区块中，中本聪写下这样一句话：​“The Times 03&#x2F;Jan&#x2F;2009 Chancellor on brink of second bailout for banks.”2009年1月3日，财政大臣正处于实施第二轮银行紧急援助的边缘，这是当天《泰晤士报》的头版文章标题。</p><p>也是当天下午的六点十五分，比特币创世区块（Genesis Block）的诞生，50枚比特币作为挖矿奖励被放置到了中本聪的钱包当中。而这50枚比特币，也成为世界上2100万枚比特币中最先诞生的一批。</p><p>现在我们仍然可以找到这个创世区块（Genesis Block），在任何一个区块链浏览器上(例如 btc.com)，搜索哈希值<em>000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f</em> ，就可以看到这个创世区块，它只记录了一条转账信息——将本区块的挖矿奖励转入中本聪的钱包地址内</p><p><img src="/home/2024/08/10/%E6%AF%94%E7%89%B9%E5%B8%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%E6%AF%94%E7%89%B9%E5%B8%81%E7%AE%80%E5%8F%B2/02GeniusBlock.png" alt="创世区块"></p><p>2009年10月5日，出现了最早的比特币与美元的汇率比，为1美元&#x3D;1309.03比特币，由一位名为“新自由标准”​（New Liberty Standard）的用户发布。一枚比特币的价值计算方法如下：由高CPU利用率的计算机运行一年所需要的平均电量1331.5千瓦时，乘以上年度美国居民平均用电成本0.1136美元，除以12个月，再除以过去30天里生产的比特币数量，最后除以1美元。</p><p>2009年12月30日，挖矿人数变多，为了保持每10分钟1个区块的恒定开采速度，比特币网络进行了第一次自我调整，提升了挖矿难度。</p><p>2010年5月22日，一个程序员用10000个比特币购买了两张比萨的优惠券，当时一枚比特币价值仅为0.005美分。这是比特币第一次被用于现实物品的交易，后来有很多的人也因此将5月22日称为“比特币比萨日”​</p><p>随着认可比特币价值的人越来越多，挖矿的人数也开始激增，比特币的价格水涨船高，加密货币市场迎来交易的狂潮，大量资本涌入市场，所以投资者都希望从中攫取财富。2017年左右，比特币价格在2017年经历了大幅上涨，出现了无数比特币造就富豪的传说。直到2021年，国家出台文件加强了对加密货币市场的监管力度，禁止金融机构提供加密货币交易服务，并打击比特币挖矿活动，这场比特币的狂潮才开始衰退。</p><p>从2009年的1月3号，创世区块的诞生起，在今天的2024年，比特币已经累计产生了818,670个区块，它的市值也从最初的零元上涨到了68000美元，总市值接近5,000亿美元。</p><p>未来比特币是否能持续上涨，它未来的发展路径是什么，我们不得而知，但比特币的成功，为互联网以及金融的未来提供了巨大可能性。</p><h2 id="轶闻：中本聪的传说"><a href="#轶闻：中本聪的传说" class="headerlink" title="轶闻：中本聪的传说"></a>轶闻：中本聪的传说</h2><p>作为一个开创性意义系统的创始人，在普遍的认知中，中本聪应该像比尔盖茨、扎克伯格那样成为全球知名的企业家，或是像阿兰·图灵、蒂姆·伯纳斯-李那样的计算机科学家。总之，谷歌、维基上应该遍布他的生平和照片。但有趣的是，至今无人知道这位比特币创始人的真实身份。</p><p>中本聪从2007年5月左右开始编写比特币，于2008年8月注册了域名bitcoin.org，同时开始给一些他认为可能对比特币感兴趣的人发送邮件，阐述他的想法。同年10月，他公开发表了白皮书，详细解释了比特币协议。不久之后，他又公开了比特币的源代码。在随后的两年里，他多次在论坛上发布信息，与许多人通过邮件交流，回答人们的疑问，同时对源代码进行了多次修改，并与几位开发人员一同维护代码，通过邮件、论坛和代码提交等方式进行合作，修复漏洞。</p><p>到了2010年12月，中本聪所有这些与外界的通讯突然停止了，其他开发人员开始接手比特币项目，中本聪此后却再也没有出现过。</p><p>我们至今仍然不知道，中本聪究竟是一个人，还是一个团队？但可以肯定“中本聪”是一个笔名，中本聪自称是一名生活在日本的37岁中年男性。但是，目前没有证据表明中本聪说日语或懂日语，并且他的英文书写相当流利，并习惯将美式拼写和英式拼写混在一起，并且他的通讯通常发生在欧洲的工作时间里，也许他并不住在日本。</p><p>有不少人研究中本聪的文章、代码、发表时间、机器标识符等蛛丝马迹，试图以此回答中本聪的母语是什么，他来自哪里。有些人甚至尝试通过文体计算（对作家风格进行文字算法分析）来找出中本聪的身份。虽然有些人自称是中本聪，也有不少人被怀疑是中本聪。</p><p>由于区块链的透明性，我们仍能在区块链浏览器上找到那些被认为属于中本聪的钱包地址。中本聪在比特币网络早期阶段进行了大量挖矿活动，这让他拥有了约100万枚左右的比特币，但他连1聪（比特币的最小单位，以中本聪名字命名）比特币都没有动过，这些比特币自最初被挖出后一直安静地放在那个钱包地址中。</p><p>根据2024年的比特币约68000美金的价格，中本聪持有的比特币足以让他跻身全球最富有的亿万富翁之列。但直到今天，中本聪的真实身份仍是一个谜团。</p>]]></content>
      
      
      <categories>
          
          <category> 比特币学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>我的文章Tags</title>
      <link href="/home/tags/index.html"/>
      <url>/home/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>笔记分类</title>
      <link href="/home/categories/index.html"/>
      <url>/home/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
